// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: format.proto

#ifndef PROTOBUF_INCLUDED_format_2eproto
#define PROTOBUF_INCLUDED_format_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_format_2eproto 

namespace protobuf_format_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_format_2eproto
namespace myobject {
class Uplink;
class UplinkDefaultTypeInternal;
extern UplinkDefaultTypeInternal _Uplink_default_instance_;
}  // namespace myobject
namespace google {
namespace protobuf {
template<> ::myobject::Uplink* Arena::CreateMaybeMessage<::myobject::Uplink>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace myobject {

// ===================================================================

class Uplink : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:myobject.Uplink) */ {
 public:
  Uplink();
  virtual ~Uplink();

  Uplink(const Uplink& from);

  inline Uplink& operator=(const Uplink& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Uplink(Uplink&& from) noexcept
    : Uplink() {
    *this = ::std::move(from);
  }

  inline Uplink& operator=(Uplink&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Uplink& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Uplink* internal_default_instance() {
    return reinterpret_cast<const Uplink*>(
               &_Uplink_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Uplink* other);
  friend void swap(Uplink& a, Uplink& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Uplink* New() const final {
    return CreateMaybeMessage<Uplink>(NULL);
  }

  Uplink* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Uplink>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Uplink& from);
  void MergeFrom(const Uplink& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Uplink* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float co2 = 1;
  void clear_co2();
  static const int kCo2FieldNumber = 1;
  float co2() const;
  void set_co2(float value);

  // float temperature = 2;
  void clear_temperature();
  static const int kTemperatureFieldNumber = 2;
  float temperature() const;
  void set_temperature(float value);

  // float humidity = 3;
  void clear_humidity();
  static const int kHumidityFieldNumber = 3;
  float humidity() const;
  void set_humidity(float value);

  // float loudness = 4;
  void clear_loudness();
  static const int kLoudnessFieldNumber = 4;
  float loudness() const;
  void set_loudness(float value);

  // int32 battery = 5;
  void clear_battery();
  static const int kBatteryFieldNumber = 5;
  ::google::protobuf::int32 battery() const;
  void set_battery(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:myobject.Uplink)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float co2_;
  float temperature_;
  float humidity_;
  float loudness_;
  ::google::protobuf::int32 battery_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_format_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Uplink

// float co2 = 1;
inline void Uplink::clear_co2() {
  co2_ = 0;
}
inline float Uplink::co2() const {
  // @@protoc_insertion_point(field_get:myobject.Uplink.co2)
  return co2_;
}
inline void Uplink::set_co2(float value) {
  
  co2_ = value;
  // @@protoc_insertion_point(field_set:myobject.Uplink.co2)
}

// float temperature = 2;
inline void Uplink::clear_temperature() {
  temperature_ = 0;
}
inline float Uplink::temperature() const {
  // @@protoc_insertion_point(field_get:myobject.Uplink.temperature)
  return temperature_;
}
inline void Uplink::set_temperature(float value) {
  
  temperature_ = value;
  // @@protoc_insertion_point(field_set:myobject.Uplink.temperature)
}

// float humidity = 3;
inline void Uplink::clear_humidity() {
  humidity_ = 0;
}
inline float Uplink::humidity() const {
  // @@protoc_insertion_point(field_get:myobject.Uplink.humidity)
  return humidity_;
}
inline void Uplink::set_humidity(float value) {
  
  humidity_ = value;
  // @@protoc_insertion_point(field_set:myobject.Uplink.humidity)
}

// float loudness = 4;
inline void Uplink::clear_loudness() {
  loudness_ = 0;
}
inline float Uplink::loudness() const {
  // @@protoc_insertion_point(field_get:myobject.Uplink.loudness)
  return loudness_;
}
inline void Uplink::set_loudness(float value) {
  
  loudness_ = value;
  // @@protoc_insertion_point(field_set:myobject.Uplink.loudness)
}

// int32 battery = 5;
inline void Uplink::clear_battery() {
  battery_ = 0;
}
inline ::google::protobuf::int32 Uplink::battery() const {
  // @@protoc_insertion_point(field_get:myobject.Uplink.battery)
  return battery_;
}
inline void Uplink::set_battery(::google::protobuf::int32 value) {
  
  battery_ = value;
  // @@protoc_insertion_point(field_set:myobject.Uplink.battery)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace myobject

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_format_2eproto
